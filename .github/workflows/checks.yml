name: Checks
on:
  pull_request:
  merge_group:
  push:
    branches:
      - dev
      - main
jobs:
  lint:
    name: Check linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install npm
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci

      - name: Remove irrelevant files that may cause TypeScript errors
        run:
          rm -f ./supabase/seed/seed.mts

      - name: Run linting
        run: npm run lint:ci

  component_tests:
    name: Run Cypress component tests
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: http://127.0.0.1:54321
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{secrets.SUPABASE_LOCAL_ANON_KEY}}
      CLOUDWATCH_LOG_GROUP: ${{secrets.AWS_CLOUDWATCH_LOG_GROUP}}
      CLOUDWATCH_LOG_STREAM: ${{secrets.AWS_CLOUDWATCH_LOG_STREAM}}
      CLOUDWATCH_ACCESS_KEY: ${{secrets.AWS_CLOUDWATCH_ACCESS_KEY}}
      CLOUDWATCH_SECRET_ACCESS_KEY: ${{secrets.AWS_CLOUDWATCH_SECRET_ACCESS_KEY}}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install npm
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci

      - name: Remove irrelevant files that may cause TypeScript errors
        run:
          rm -f ./supabase/seed/seed.mts

      - name: Compile
        run: npm run build

      - name: Run Cypress component tests
        run: npm run cypress:component

      - name: Upload Screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: screenshots
          path: cypress/screenshots
          retention-days: 1

      - name: Upload Videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: videos
          path: cypress/videos
          retention-days: 1

  e2e_tests:
    name: Run Cypress end-to-end tests
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: http://127.0.0.1:54321
      NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_LOCAL_SERVICE_ROLE_KEY }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{secrets.SUPABASE_LOCAL_ANON_KEY}}
      NEXT_PUBLIC_CYPRESS_TEST_USER: admin@example.com
      NEXT_PUBLIC_CYPRESS_TEST_PASS: admin123
      CLOUDWATCH_LOG_GROUP: ${{secrets.AWS_CLOUDWATCH_LOG_GROUP}}
      CLOUDWATCH_LOG_STREAM: ${{secrets.AWS_CLOUDWATCH_LOG_STREAM}}
      CLOUDWATCH_ACCESS_KEY: ${{secrets.AWS_CLOUDWATCH_ACCESS_KEY}}
      CLOUDWATCH_SECRET_ACCESS_KEY: ${{secrets.AWS_CLOUDWATCH_SECRET_ACCESS_KEY}}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install npm
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci

      - name: Start local Supabase instance
        run: npx supabase start

      - name: Create users for the local Supabase instance
        run: npx ts-node supabase/tools/createUserForEachRole.ts

      - name: Create bucket for the local Supabase instance
        run: npx ts-node supabase/tools/createStorage.ts

      - name: Remove irrelevant files that may cause TypeScript errors
        run:
          rm -f ./supabase/seed/seed.mts

      - name: Compile
        run: npm run build

      - name: Run Cypress e2e tests
        run: npm run cypress:e2e

      - name: Upload Screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: screenshots
          path: cypress/screenshots
          retention-days: 1

      - name: Upload Videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: videos
          path: cypress/videos
          retention-days: 1

  jest_tests:
    name: Run Jest tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install npm
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci
  
      - name: Run jest tests
        run: npm run jest:all
